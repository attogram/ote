<?php // import

require_once('ote.class.php');

$ote->force_slash_at_end();

$request_uri = $_SERVER['REQUEST_URI'];
$c = explode('/', $request_uri);

// Error: url too long - redir to /list/
if( isset($c[3+DEPTH]) ) { 
  doerror(); 
} 

if( $_SESSION['level'] <= 5 ) {  
	$_SESSION['alert'] = $ote->__('admin error: permission level 5 required') . '<br />'; 
	header('HTTP/1.1 301 Moved Permanently');
	header('Location: ' . HOSTNAME);
	exit;
}



if( $_POST ) {

	$d = stripslashes($_POST['d']);

	$x = htmlentities( urldecode($_POST['x']) );

	$i = $_POST['i'];

	if( !$d || !$x || !$i ) { 
		$_SESSION['alert'] .= 'Please choose a language pair, enter a delimiter, and enter import text<br />';
		doerror();     
	}
	if( $x == LANG_1_CODE ) {
		do_import(LANG_1_CODE, LANG_2_CODE, $i, $d);
	} elseif( $x == LANG_2_CODE ) {
		do_import(LANG_2_CODE, LANG_1_CODE, $i, $d);
	} else {
		doerror();
	}
} else {
	$ote->show_header( $ote->__('import') );
	print $ote->get_template('import.html');
}

$ote->show_footer();
exit;

//////////////////////////////////////////////////////////////////////////////////
function doerror() {
	header('HTTP/1.1 301 Moved Permanently');
	header('Location: ' . HOSTNAME . 'import/');
	exit;
}


//////////////////////////////////////////////////////////////////////////////////
function do_import( $source_code, $target_code, $input, $delim="\t") {
	global $ote;
	$ote->show_header( $ote->__('import') . " $source_code &gt; $target_code");

	$delim_name = $delim;   
	$delim_name = str_replace(' ','<SPACE>', $delim_name);
	$delim_name = str_replace('\t','<TAB>', $delim_name);
	$delim = str_replace('\t',"\t", $delim);

	$x = explode("\n", $input);

	print "<br />Import: $source_code &gt; $target_code"
	. '<br />Size: ' . sizeof($x) . ' potential word pairs'
	. '<br />Delimiter: ' . htmlentities($delim_name);

	if( defined('FORCE_LOWERCASE') ) {
		print '<br />Case: Forced Lowercased';
	} else {
		print '<br />Case: Native';
	}
	print '<br /><br />';

	if( sizeof($x) == 0 ) {
		print '<p>ERROR: no input</p>'; 
		$ote->footer();
		exit;
	}


	if( $delim == '\t' ) { // override for tab character
		$delim = "\t"; 
	} 

	reset($x);

	while( $y = each($x) ) {
		$y = $y[1];
		$y = trim($y);
		//print 'Testing: "' . $ote->clean($y) . '" ';
		print '. ';
		//flush();
		//ob_flush();

		$z = explode( $delim, $y );
		$z[0] = ltrim($z[0]);
		$z[0] = rtrim($z[0]);
		$z[1] = ltrim($z[1]);
		$z[1] = rtrim($z[1]);

		if( (!$z[0] || !$z[1]) ) {
			// print ' *** IGNORED: malformed or comment<br />';
		} else {
			$z[0] = $ote->clean($z[0]);
			$z[1] = $ote->clean($z[1]);
			import_wordpair( $z[0], $z[1], $source_code, $target_code );
		}

	} // end while
	
	print $ote->__('end of import');
	print '<p># ' . $ote->import_count . '</p>';
} // end of do_export


//////////////
function import_wordpair( $source_word, $target_word, $source_code, $target_code ) {

  global $ote;

 // print '<br />';
  
  $source_word_id = $ote->get_word_id_by_name( $source_word );
  if( $source_word_id == 0 ) { 
    $source_word_id = $ote->add_word( $source_word ); 
	$ote->import_count++;
   // print "ADD WORD $source_word_id $source_code " . $ote->clean($source_word) . '<br />';
  } else {
   // print "OK WORD $source_word_id $source_code " . $ote->clean($source_word). '<br />';
  }
  
  $target_word_id = $ote->get_word_id_by_name( $target_word );
  if( $target_word_id == 0 ) { 
    $target_word_id = $ote->add_word( $target_word );
	$ote->import_count++;
   // print "ADD WORD $target_word_id $target_code " . $ote->clean($target_word). '<br />';
  } else {
   // print "OK WORD $target_word_id $target_code " . $ote->clean($target_word). '<br />';
  }
  

  $source_links = $ote->get_links_by_word_id( $source_word_id );
  if( $source_links ) { 
    reset($source_links);    
    $source_link_id = 0;
    while( $x = each($source_links) ) {
      $x = $x[1];
      if(    $x->t_code == $target_code && $x->s_code == $source_code 
          && $x->t_id == $target_word_id && $x->s_id == $source_word_id  ) {  
            $source_link_id = $x->id;      
      } 
    } // end while each _links
    if( $source_link_id ) {
    //  print "OK LINK $source_link_id $source_code $target_code<br />";
    } else {
      $source_link_id = $ote->add_word2word( $source_word, $source_code, $target_word, $target_code);
    //  print "ADD LINK $source_link_id $source_code $target_code<br />";
    }     
  } else {
     $source_link_id = $ote->add_word2word( $source_word, $source_code, $target_word, $target_code );
   // print "ADD LINK $source_link_id $source_code $target_code<br />";
  } // end if source_links


  
  $target_links = $ote->get_links_by_word_id( $target_word_id );
  if( $target_links ) { 
    reset($target_links);    
    $target_link_id = 0;
    while( $x = each($target_links) ) {
      $x = $x[1];
      if(    $x->s_code == $target_code && $x->t_code == $source_code 
          && $x->s_id == $target_word_id && $x->t_id == $source_word_id  ) {  
            $target_link_id = $x->id;      
      } 
    } // end while each _links
    if( $target_link_id ) {
    //  print "OK LINK $target_link_id $target_code $source_code<br />";
    } else {
      $target_link_id = $ote->add_word2word( $target_word, $target_code, $source_word, $source_code );
    //  print "ADD LINK $target_link_id $target_code $source_code<br />";
    }     
  } else {
     $target_link_id = $ote->add_word2word( $target_word, $target_code, $source_word, $source_code );
   // print "ADD LINK $target_link_id $target_code $source_code<br />";
  } // end if target_links

} // end function import_wordpair
